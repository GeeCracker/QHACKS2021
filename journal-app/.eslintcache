[{"C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\index.js":"1","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\App.js":"2","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\screens\\LoginScreen.js":"3","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\screens\\NewJournalScreen.js":"4","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\screens\\ProfileScreen.js":"5","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\LoginForm.js":"6","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\SignupForm.js":"7","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\firebase.js":"8","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\Topbar.js":"9","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\JournalList.js":"10","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\QuestionCard.js":"11","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\FillButton.js":"12"},{"size":230,"mtime":1611378180791,"results":"13","hashOfConfig":"14"},{"size":699,"mtime":1611438316644,"results":"15","hashOfConfig":"14"},{"size":1135,"mtime":1611428269975,"results":"16","hashOfConfig":"14"},{"size":7646,"mtime":1611458468331,"results":"17","hashOfConfig":"14"},{"size":1346,"mtime":1611458468332,"results":"18","hashOfConfig":"14"},{"size":2790,"mtime":1611458468327,"results":"19","hashOfConfig":"14"},{"size":3199,"mtime":1611458468329,"results":"20","hashOfConfig":"14"},{"size":495,"mtime":1611425254726,"results":"21","hashOfConfig":"14"},{"size":850,"mtime":1611458473271,"results":"22","hashOfConfig":"14"},{"size":2360,"mtime":1611458468326,"results":"23","hashOfConfig":"14"},{"size":1546,"mtime":1611458468328,"results":"24","hashOfConfig":"14"},{"size":969,"mtime":1611450846878,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1gutin6",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\index.js",[],["59","60"],"C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\App.js",["61"],"import Login from './screens/LoginScreen';\r\nimport Profile from './screens/ProfileScreen';\r\nimport NewJournal from './screens/NewJournalScreen';\r\nimport firebase from './firebase.js';\r\nimport React from 'react';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route path=\"/newjournal\">\r\n              <NewJournal />\r\n            </Route>\r\n          </Switch>\r\n      </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\screens\\LoginScreen.js",["62"],"import React from 'react';\r\n\r\nimport LoginForm from '../components/LoginForm';\r\nimport SignupForm from '../components/SignupForm';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signup: false\r\n        };\r\n    }\r\n\r\n    toLogin = () => {\r\n        this.setState({signup: false});\r\n    }\r\n\r\n    toSignup = () => {\r\n        this.setState({signup: true});\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n\r\n        <div class=\"login-left\">\r\n            <div class=\"login-title\">journ-o</div>\r\n        </div>\r\n        <div class=\"login-right\">\r\n            {this.state.signup ? \r\n                <>\r\n                    <SignupForm />\r\n                    <button class=\"login-line-button\" onClick={this.toLogin}>login</button>\r\n                </>:\r\n                <>\r\n                    <LoginForm />\r\n                    <button class=\"login-line-button\" onClick={this.toSignup}>signup</button>\r\n                </>\r\n            }\r\n        </div>\r\n\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Login;","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\screens\\NewJournalScreen.js",["63","64","65","66","67","68","69","70"],"import React from 'react';\r\n\r\nimport QuestionCard from '../components/QuestionCard';\r\nimport Topbar from '../components/Topbar';\r\n\r\nimport masterQuestions from '../assets/Questions.json';\r\nimport firebase from '../firebase.js';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass NewJournal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    var today = new Date();\r\n    var date = months[today.getMonth()] + ' ' + today.getDate() + ', ' + today.getFullYear();\r\n\r\n    this.state = {\r\n      questions: [],\r\n      title: '',\r\n      date: date,\r\n      content: '',\r\n      currentQuestion: 0,\r\n      currentChoice: 0, // current mc question choice index\r\n      stage: 0, // stage of questions, 0-starting, 1-final, 2-main\r\n      answer: '',\r\n      doneentry: false\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.answerChanged = this.answerChanged.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    // Getting initial starting question\r\n    var validIds = masterQuestions.StartingQuestions[0];\r\n    var rand = Math.floor(Math.random() * validIds.length) + 0 ;\r\n    var q = masterQuestions.StartingQuestions[validIds[rand]];\r\n    this.setState({\r\n      questions: [...this.state.questions, q],\r\n    });\r\n  }\r\n\r\n  generateFinalQuestion() {\r\n    // get question from FinalQuestion list\r\n    this.setState({stage: 1});\r\n    var validIds = masterQuestions.FinalQuestions[0];\r\n    var rand = Math.floor(Math.random() * validIds.length) + 0;\r\n    var q = masterQuestions.FinalQuestions[validIds[rand]];\r\n    this.setState({\r\n      questions: [...this.state.questions, q],\r\n    });\r\n    this.setState({currentQuestion: this.state.currentQuestion+1})\r\n  }\r\n\r\n  generateNextQuestion() {\r\n    this.setState({stage: 2});\r\n    var validIds = masterQuestions.MainQuestions[0];\r\n    var rand = Math.floor(Math.random() * validIds.length) + 0;\r\n    var q = masterQuestions.MainQuestions[validIds[rand]];\r\n    this.setState({\r\n      questions: [...this.state.questions, q],\r\n    });\r\n    this.setState({currentQuestion: this.state.currentQuestion+1})\r\n  }\r\n\r\n  answerChanged(event) {\r\n    this.setState({answer: event.target.value});\r\n  }\r\n\r\n  gotoNextQuestion() {\r\n    // question when we have a targetid\r\n    var qid = this.state.questions[this.state.currentQuestion].choices[this.state.currentChoice].targetid;\r\n    var q\r\n    if(this.state.stage == 0) {\r\n      q = masterQuestions.StartingQuestions[qid];\r\n    } else if(this.state.stage == 1){\r\n      q = masterQuestions.FinalQuestions[qid];\r\n    } else {\r\n      q = masterQuestions.MainQuestions[qid];\r\n    }\r\n    this.setState({\r\n      questions: [...this.state.questions, q],\r\n    });\r\n    this.setState({currentQuestion: this.state.currentQuestion+1})\r\n  }\r\n\r\n  saveMCResponse() {\r\n    // save question response to journal list\r\n    var sentence = this.state.questions[this.state.currentQuestion].choices[this.state.currentChoice].output+\" \";\r\n    this.setState({content: this.state.content + sentence});\r\n  }\r\n\r\n  saveTitleResponse() {\r\n    // save title to journal\r\n    // only called when final inital question is answered.\r\n    var title = this.state.questions[this.state.currentQuestion].title;\r\n    var sentence = this.state.questions[this.state.currentQuestion].question+\" \"+this.state.answer+\". \";\r\n    this.setState({title: title});\r\n    this.setState({content: this.state.content + sentence});\r\n    this.setState({answer: ''});\r\n  }\r\n\r\n  saveResponse() {\r\n    // save question response to journal list\r\n    var sentence = this.state.questions[this.state.currentQuestion].output+\" \"+this.state.answer+\". \";\r\n    this.setState({content: this.state.content + sentence});\r\n    this.setState({answer: ''});\r\n  }\r\n\r\n\r\n  handleClick(index){\r\n    this.setState({currentChoice: index});\r\n  }\r\n\r\n  leftClick = () => {\r\n    // left arrow click function\r\n    this.setState({currentQuestion: this.state.currentQuestion-1})\r\n  }\r\n\r\n  rightClick = () => {\r\n    // right arrow click function\r\n    if (this.state.currentQuestion == this.state.questions.length-1) {\r\n      if(this.state.questions[this.state.currentQuestion].type == \"mc\") {\r\n        this.saveMCResponse();\r\n        this.gotoNextQuestion();\r\n      } else {\r\n        // if current stage is initial, move on to final question\r\n        if(this.state.stage == 0){\r\n          this.saveTitleResponse();\r\n          this.generateFinalQuestion();\r\n        // if current stage is final question, move onto main questions stage\r\n        } else if(this.state.stage >= 1){\r\n          this.saveResponse();\r\n          this.generateNextQuestion();\r\n        }\r\n      }\r\n    } else {\r\n      this.setState({currentQuestion: this.state.currentQuestion+1})\r\n    }\r\n  }\r\n\r\n  widthCalc() {\r\n    // progress bar animation\r\n    var num = (this.state.currentQuestion+1)/20*100;\r\n    if(num >= 100){\r\n      num = 100;\r\n    }\r\n    var str = num.toString()+\"%\";\r\n    return str;\r\n  }\r\n\r\n  finishJournal = () => {\r\n    // finish Journ=o button function\r\n    var newEntry = [\r\n      this.state.title,\r\n      this.state.date,\r\n      this.state.content\r\n    ]\r\n    var uid = sessionStorage.getItem('uid')\r\n    var entrynum\r\n    firebase.database().ref('/users/'+uid+'/journals').on(\"value\", function(snapshot){\r\n      entrynum = snapshot.numChildren();\r\n  })\r\n    firebase.database().ref('/users/'+uid+ '/journals/' + (entrynum+1)).set({\r\n      title: newEntry[0],\r\n      date: newEntry[1],\r\n      content: newEntry[2],\r\n    })\r\n    alert(newEntry[0]);\r\n    alert(newEntry[1]);\r\n    alert(newEntry[2]);\r\n    this.setState({doneentry: true})\r\n  }\r\n\r\n  render() {\r\n    if(this.state.doneentry === true){\r\n      return <Redirect to='/profile'/>\r\n    }\r\n\r\n    console.log(this.state.content);\r\n    var left = this.state.currentQuestion != 0;\r\n    var right = true;\r\n    var finish = this.state.currentQuestion >= 5;\r\n    var mc = this.state.questions[this.state.currentQuestion].type == \"mc\";\r\n    const prog = {\r\n      backgroundColor: '#16C79A',\r\n      height: '100%',\r\n      width: this.widthCalc(),\r\n      transition: '0.5s ease'\r\n    };\r\n      return (\r\n        <div style={{position:'absolute',backgroundColor: '#19456B',height:'100vh',width:'100vw'}}>\r\n\r\n          <Topbar />\r\n\r\n          <div class=\"new-title\">{this.state.date}</div>\r\n\r\n          <div class=\"progbar\">\r\n            <div style={prog} />\r\n          </div>\r\n\r\n          <QuestionCard  \r\n            question={this.state.questions[this.state.currentQuestion]}\r\n            type={mc}\r\n            choice={this.state.currentChoice} // active button on mc questions\r\n            handleClick={this.handleClick} // button click for an mc question\r\n            answerChanged={this.answerChanged}\r\n            answer={this.state.answer}\r\n            />\r\n          \r\n          <div class=\"navbar-box\">\r\n            {left ? <div class=\"arrow-left\" onClick={this.leftClick}/> : null}\r\n            {right ? <div class=\"arrow-right\" onClick={this.rightClick}/> : null}\r\n          </div>\r\n\r\n          {finish ? \r\n          <button class=\"done-full-button\" onClick={this.finishJournal}>Finish Journ-o</button>\r\n          : null}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default NewJournal;","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\LoginForm.js",["71","72"],"import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../firebase.js';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            userid: '',\r\n            loggedin: false\r\n        };\r\n    \r\n        this.emailChanged = this.emailChanged.bind(this);\r\n        this.passwordChanged = this.passwordChanged.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    emailChanged(event) {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    passwordChanged(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        // SUBMIT BUTTON EVENT HANDLER\r\n        //alert('A name was submitted: ' + this.state.email);\r\n        //alert('A password was submitted: ' + this.state.password);\r\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then((userCredential) => {\r\n                // Signed in\r\n                var user = userCredential.user;\r\n                var uid = user.uid;\r\n                this.setState({userid: uid})\r\n                // add a login\r\n                var logs = this.getLogins(this.state.userid)\r\n                firebase.database().ref('/users/'+this.state.userid).update({\r\n                    logins: logs+1\r\n                })\r\n                sessionStorage.setItem('uid',uid)\r\n                this.setState({loggedin: true})\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                alert(errorMessage);\r\n            });\r\n        event.preventDefault();\r\n        \r\n    }\r\n\r\n    getLogins(uid){\r\n        var logins = 1;\r\n        firebase.database().ref('/users/'+uid+'/logins').on(\"value\", function(snapshot){\r\n            logins = snapshot.val();\r\n        })\r\n        return logins\r\n\r\n    }\r\n    \r\n      render() {\r\n          \r\n        if (this.state.loggedin === true) {\r\n            return <Redirect to='/profile' />\r\n        }\r\n\r\n        return (\r\n            <div class=\"form\">\r\n\r\n            <div class=\"form-title\">Log in</div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        email:\r\n                        <input type=\"text\" value={this.state.email} onChange={this.emailChanged} />\r\n                    </label>\r\n                    <label>\r\n                        password:\r\n                        <input type=\"text\" value={this.state.password} onChange={this.passwordChanged} />\r\n                    </label>\r\n                    <input type=\"submit\" value=\"GO\" />\r\n                </form>\r\n            </div>\r\n        );\r\n      }\r\n  }\r\n\r\nexport default LoginForm;","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\SignupForm.js",["73","74"],"import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../firebase.js';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass SignupForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            email: '',\r\n            userid: '',\r\n            loggedin: false\r\n        };\r\n    \r\n        this.usernameChanged = this.usernameChanged.bind(this);\r\n        this.passwordChanged = this.passwordChanged.bind(this);\r\n        this.emailChanged = this.emailChanged.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    usernameChanged(event) {\r\n        this.setState({username: event.target.value});\r\n    }\r\n\r\n    passwordChanged(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    emailChanged(event) {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        // SUBMIT BUTTON EVENT HANDLER\r\n        //alert('A name was submitted: ' + this.state.username);\r\n        //alert('A password was submitted: ' + this.state.password);\r\n        //alert('A email was submitted: ' + this.state.email);\r\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then((userCredential) => {\r\n                // Signed in \r\n                var user = userCredential.user;\r\n                var uid = user.uid;\r\n                this.setState({userid: uid})\r\n                firebase.database().ref('/users/'+this.state.userid).set({\r\n                    logins: 1,\r\n                    email: this.state.email,\r\n                    user: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n                sessionStorage.setItem('uid',uid)\r\n                this.setState({loggedin: true})\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                alert(errorMessage);\r\n                // ..\r\n            });\r\n    \r\n        event.preventDefault();\r\n    }\r\n\r\n    \r\n      render() {\r\n\r\n        if (this.state.loggedin === true) {\r\n            return <Redirect to='/profile'/>\r\n        }\r\n\r\n        return (\r\n            <div class=\"form\">\r\n\r\n            <div class=\"form-title\">Sign up</div>\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    email:\r\n                    <input type=\"text\" value={this.state.email} onChange={this.emailChanged} />\r\n                </label>\r\n                <label>\r\n                    username:\r\n                    <input type=\"text\" value={this.state.username} onChange={this.usernameChanged} />\r\n                </label>\r\n                <label>\r\n                    password:\r\n                    <input type=\"text\" value={this.state.password} onChange={this.passwordChanged} />\r\n                </label>\r\n                <label>\r\n                    confirm password:\r\n                    <input type=\"text\" value={this.state.password} onChange={this.passwordChanged} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n\r\n            </div>\r\n        );\r\n      }\r\n  }\r\n\r\nexport default SignupForm;","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\firebase.js",[],"C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\Topbar.js",["75","76","77"],"C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\JournalList.js",["78"],"import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../firebase.js';\r\n\r\nclass JournalList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            journals: []\r\n        };\r\n    }\r\n    getJournalIDs(){\r\n        var jids = []\r\n        var uid = sessionStorage.getItem('uid')\r\n        var journalRef = firebase.database().ref(\"users/\"+uid+\"/journals\");\r\n        journalRef.on(\"value\", function(snapshot) {\r\n            snapshot.forEach(function(data) {\r\n              jids.push(data.key)\r\n            });\r\n          });\r\n        return jids\r\n    }\r\n    getJournalTitle(jid,uid){\r\n        var title\r\n        firebase.database().ref('/users/'+uid+'/journals/'+jid+\"/title\").on(\"value\", function(snapshot){\r\n            title = snapshot.val();\r\n        })\r\n        return title\r\n    }\r\n    getJournalDate(jid,uid){\r\n        var date\r\n        firebase.database().ref('/users/'+uid+'/journals/'+jid+\"/date\").on(\"value\", function(snapshot){\r\n            date = snapshot.val();\r\n        })\r\n        return date\r\n    }\r\n    getJournalContent(jid,uid){\r\n        var content\r\n        firebase.database().ref('/users/'+uid+'/journals/'+jid+\"/content\").on(\"value\", function(snapshot){\r\n            content = snapshot.val();\r\n        })\r\n        return content\r\n    }\r\n\r\n    async componentWillMount(){\r\n        var jids = this.getJournalIDs()\r\n        var uid = sessionStorage.getItem('uid')\r\n        for (var i = 0; i < jids.length; i++){\r\n             await this.setState({journals: [...this.state.journals,[\r\n                this.getJournalTitle(jids[i],uid),\r\n                this.getJournalDate(jids[i],uid),\r\n                this.getJournalContent(jids[i],uid)\r\n            ]],\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n            {this.state.journals.reverse().map((item, index) => (\r\n                <div class=\"journal-box\">\r\n                \r\n                <div class=\"date\">{item[1]}</div>\r\n                <div class=\"entry\">\r\n                    <div class=\"title\">{item[0]}</div>\r\n                    <div class=\"content\">{item[2]}</div>\r\n                </div>\r\n\r\n                </div>\r\n            ))}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JournalList;","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\QuestionCard.js",["79","80"],"import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nimport FillButton from './FillButton';\r\n\r\nclass QuestionCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isMC: this.props.type == 'mc'\r\n        };\r\n    }\r\n\r\n    onButtonClick = () => {\r\n        alert(\"swag\");\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div class=\"qcard\">\r\n                <div class=\"qcard-top\">\r\n                    <div class=\"box\">{this.props.question.question}</div>\r\n                </div>\r\n                <div class=\"qcard-bottom\">\r\n                    <div class=\"box\">\r\n                        {this.state.isMC ? \r\n                        this.props.question.choices.map((item, index) => (\r\n                            <FillButton \r\n                                text={item.answer} // answer option text\r\n                                active={this.props.choice == index} // choice.picked (1 or 0)\r\n                                index={index} // index of choice\r\n                                handleClick={this.props.handleClick}\r\n                            />\r\n                        ))\r\n                        : \r\n                        <input type='text' class=\"qcard-write\" placeholder=\"type here...\"/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionCard;","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\FillButton.js",["81","82","83"],"import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nclass FillButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicked: this.props.picked == 1,\r\n        };\r\n    }\r\n    \r\n    render() {\r\n\r\n        const style = {\r\n            display: 'inline-block',\r\n            maxWidth: 300,\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            paddingTop: 10,\r\n            paddingBottom: 10,\r\n            backgroundColor: this.props.active == 1 ? 'white' : '#16C79A',\r\n            color: this.props.active == 1 ? '#16C79A' : 'white',\r\n            textAlign: 'center',\r\n            borderRadius: 100,\r\n            marginLeft: 10,\r\n            marginRight: 10,\r\n        };\r\n\r\n        return (\r\n            <div style={style} onClick={() => this.props.handleClick(this.props.index)}>\r\n                {this.props.text}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FillButton;",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":16},{"ruleId":"88","severity":1,"message":"92","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":25,"column":7,"nodeType":"95","messageId":"96","endLine":25,"endColumn":11},{"ruleId":"97","severity":1,"message":"98","line":76,"column":25,"nodeType":"99","messageId":"96","endLine":76,"endColumn":27},{"ruleId":"97","severity":1,"message":"98","line":78,"column":32,"nodeType":"99","messageId":"96","endLine":78,"endColumn":34},{"ruleId":"97","severity":1,"message":"98","line":121,"column":36,"nodeType":"99","messageId":"96","endLine":121,"endColumn":38},{"ruleId":"97","severity":1,"message":"98","line":122,"column":64,"nodeType":"99","messageId":"96","endLine":122,"endColumn":66},{"ruleId":"97","severity":1,"message":"98","line":127,"column":29,"nodeType":"99","messageId":"96","endLine":127,"endColumn":31},{"ruleId":"97","severity":1,"message":"100","line":180,"column":43,"nodeType":"99","messageId":"96","endLine":180,"endColumn":45},{"ruleId":"97","severity":1,"message":"98","line":183,"column":68,"nodeType":"99","messageId":"96","endLine":183,"endColumn":70},{"ruleId":"88","severity":1,"message":"92","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":14},{"ruleId":"88","severity":1,"message":"101","line":52,"column":21,"nodeType":"90","messageId":"91","endLine":52,"endColumn":30},{"ruleId":"88","severity":1,"message":"92","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":14},{"ruleId":"88","severity":1,"message":"101","line":60,"column":21,"nodeType":"90","messageId":"91","endLine":60,"endColumn":30},{"ruleId":"88","severity":1,"message":"92","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":16},{"ruleId":"88","severity":1,"message":"102","line":18,"column":13,"nodeType":"90","messageId":"91","endLine":18,"endColumn":16},{"ruleId":"88","severity":1,"message":"92","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":14},{"ruleId":"97","severity":1,"message":"98","line":11,"column":35,"nodeType":"99","messageId":"96","endLine":11,"endColumn":37},{"ruleId":"97","severity":1,"message":"98","line":31,"column":59,"nodeType":"99","messageId":"96","endLine":31,"endColumn":61},{"ruleId":"97","severity":1,"message":"98","line":9,"column":40,"nodeType":"99","messageId":"96","endLine":9,"endColumn":42},{"ruleId":"97","severity":1,"message":"98","line":22,"column":48,"nodeType":"99","messageId":"96","endLine":22,"endColumn":50},{"ruleId":"97","severity":1,"message":"98","line":23,"column":38,"nodeType":"99","messageId":"96","endLine":23,"endColumn":40},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-dupe-keys","Duplicate key 'date'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","'errorCode' is assigned a value but never used.","'uid' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]