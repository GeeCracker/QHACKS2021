[{"C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\index.js":"1","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\App.js":"2","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\screens\\LoginScreen.js":"3","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\screens\\NewJournalScreen.js":"4","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\screens\\ProfileScreen.js":"5","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\LoginForm.js":"6","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\SignupForm.js":"7","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\firebase.js":"8","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\Topbar.js":"9","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\JournalList.js":"10","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\QuestionCard.js":"11","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\FillButton.js":"12"},{"size":230,"mtime":1611378180791,"results":"13","hashOfConfig":"14"},{"size":699,"mtime":1611438316644,"results":"15","hashOfConfig":"14"},{"size":1135,"mtime":1611428269975,"results":"16","hashOfConfig":"14"},{"size":3149,"mtime":1611451357604,"results":"17","hashOfConfig":"14"},{"size":1489,"mtime":1611451368131,"results":"18","hashOfConfig":"14"},{"size":2961,"mtime":1611450846878,"results":"19","hashOfConfig":"14"},{"size":3399,"mtime":1611450846879,"results":"20","hashOfConfig":"14"},{"size":495,"mtime":1611425254726,"results":"21","hashOfConfig":"14"},{"size":871,"mtime":1611451368130,"results":"22","hashOfConfig":"14"},{"size":2661,"mtime":1611455194262,"results":"23","hashOfConfig":"14"},{"size":1437,"mtime":1611451357603,"results":"24","hashOfConfig":"14"},{"size":969,"mtime":1611450846878,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1gutin6",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\index.js",[],["59","60"],"C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\App.js",["61"],"import Login from './screens/LoginScreen';\r\nimport Profile from './screens/ProfileScreen';\r\nimport NewJournal from './screens/NewJournalScreen';\r\nimport firebase from './firebase.js';\r\nimport React from 'react';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route path=\"/newjournal\">\r\n              <NewJournal />\r\n            </Route>\r\n          </Switch>\r\n      </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\screens\\LoginScreen.js",["62"],"import React from 'react';\r\n\r\nimport LoginForm from '../components/LoginForm';\r\nimport SignupForm from '../components/SignupForm';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signup: false\r\n        };\r\n    }\r\n\r\n    toLogin = () => {\r\n        this.setState({signup: false});\r\n    }\r\n\r\n    toSignup = () => {\r\n        this.setState({signup: true});\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n\r\n        <div class=\"login-left\">\r\n            <div class=\"login-title\">journ-o</div>\r\n        </div>\r\n        <div class=\"login-right\">\r\n            {this.state.signup ? \r\n                <>\r\n                    <SignupForm />\r\n                    <button class=\"login-line-button\" onClick={this.toLogin}>login</button>\r\n                </>:\r\n                <>\r\n                    <LoginForm />\r\n                    <button class=\"login-line-button\" onClick={this.toSignup}>signup</button>\r\n                </>\r\n            }\r\n        </div>\r\n\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Login;","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\screens\\NewJournalScreen.js",["63","64","65","66","67","68","69"],"import React from 'react';\r\n\r\nimport QuestionCard from '../components/QuestionCard';\r\nimport Topbar from '../components/Topbar';\r\n\r\nclass NewJournal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [\r\n        {\r\n          id: 1,\r\n          type: 'mc',\r\n          question: 'How much milk did you drink today?',\r\n          choices: [\r\n            {\r\n              answer: 'so much.',\r\n              targetid: 2,\r\n              picked: 0\r\n            },\r\n            {\r\n              answer: 'I suck a cow tiddy.',\r\n              targetid: 3,\r\n              picked: 0\r\n            },\r\n            {\r\n              answer: 'I\\'m lactose swactose my guy.',\r\n              targetid: 4,\r\n              picked: 0\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: 2,\r\n          type: 'written',\r\n          question: 'How do you doodoo today?',\r\n          choices: []\r\n        }\r\n      ],\r\n      currentQuestion: 0,\r\n      currentChoice: 0,\r\n      date: 'Jan 25, 2021',\r\n      left: false,\r\n      right: true\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // TODO questions\r\n  }\r\n\r\n  handleClick(index){\r\n    this.setState({currentChoice: index});\r\n  }\r\n\r\n  leftClick = () => {\r\n    // left arrow click function\r\n    this.setState({currentQuestion: this.state.currentQuestion-1})\r\n  }\r\n\r\n  rightClick = () => {\r\n    // right arrow click function\r\n    // TODO generate next question function\r\n    this.setState({currentQuestion: this.state.currentQuestion+1})\r\n  }\r\n\r\n  widthCalc() {\r\n    // progress bar animation\r\n    var num = (this.state.currentQuestion+1)/20*100;\r\n    if(num >= 100){\r\n      num = 100;\r\n    }\r\n    var str = num.toString()+\"%\";\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    var left = this.state.currentQuestion != 0;\r\n    var right = true;\r\n    var finish = this.state.currentQuestion >= 5;\r\n    const prog = {\r\n      backgroundColor: '#16C79A',\r\n      height: '100%',\r\n      width: this.widthCalc(),\r\n      transition: '0.5s ease'\r\n    };\r\n      return (\r\n        <div style={{position:'absolute',backgroundColor: '#19456B',height:'100vh',width:'100vw'}}>\r\n\r\n          <Topbar />\r\n\r\n          <div class=\"new-title\">{this.state.date}</div>\r\n\r\n          <div class=\"progbar\">\r\n            <div style={prog} />\r\n          </div>\r\n\r\n          <QuestionCard  \r\n            question={this.state.questions[this.state.currentQuestion]}\r\n            type={this.state.questions[this.state.currentQuestion].type}\r\n            choice={this.state.currentChoice} // active button on mc questions\r\n            handleClick={this.handleClick} // button click for an mc question\r\n            />\r\n          \r\n          <div class=\"navbar-box\">\r\n            {left ? <div class=\"arrow-left\" onClick={this.leftClick}/> : null}\r\n            {right ? <div class=\"arrow-right\" onClick={this.rightClick}/> : null}\r\n          </div>\r\n\r\n          {finish ? \r\n          <button class=\"done-full-button\" onClick={this.newJournal}>Finish Journ-o</button>\r\n          : null}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default NewJournal;","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\LoginForm.js",["70","71"],"import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../firebase.js';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            userid: '',\r\n            loggedin: false\r\n        };\r\n    \r\n        this.emailChanged = this.emailChanged.bind(this);\r\n        this.passwordChanged = this.passwordChanged.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    emailChanged(event) {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    passwordChanged(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        // SUBMIT BUTTON EVENT HANDLER\r\n        //alert('A name was submitted: ' + this.state.email);\r\n        //alert('A password was submitted: ' + this.state.password);\r\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then((userCredential) => {\r\n                // Signed in\r\n                var user = userCredential.user;\r\n                var uid = user.uid;\r\n                this.setState({userid: uid})\r\n                // add a login\r\n                var logs = this.getLogins(this.state.userid)\r\n                firebase.database().ref('/users/'+this.state.userid).update({\r\n                    logins: logs+1\r\n                })\r\n                sessionStorage.setItem('uid',uid)\r\n                this.setState({loggedin: true})\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                alert(errorMessage);\r\n            });\r\n        event.preventDefault();\r\n        \r\n    }\r\n\r\n    getLogins(uid){\r\n        var logins = 1;\r\n        firebase.database().ref('/users/'+uid+'/logins').on(\"value\", function(snapshot){\r\n            logins = snapshot.val();\r\n        })\r\n        return logins\r\n\r\n    }\r\n    \r\n      render() {\r\n          \r\n        if (this.state.loggedin === true) {\r\n            return <Redirect to='/profile' />\r\n        }\r\n\r\n        return (\r\n            <div class=\"form\">\r\n\r\n            <div class=\"form-title\">Log in</div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        email:\r\n                        <input type=\"text\" value={this.state.email} onChange={this.emailChanged} />\r\n                    </label>\r\n                    <label>\r\n                        password:\r\n                        <input type=\"text\" value={this.state.password} onChange={this.passwordChanged} />\r\n                    </label>\r\n                    <input type=\"submit\" value=\"GO\" />\r\n                </form>\r\n            </div>\r\n        );\r\n      }\r\n  }\r\n\r\nexport default LoginForm;","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\SignupForm.js",["72","73"],"import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../firebase.js';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass SignupForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            email: '',\r\n            userid: '',\r\n            loggedin: false\r\n        };\r\n    \r\n        this.usernameChanged = this.usernameChanged.bind(this);\r\n        this.passwordChanged = this.passwordChanged.bind(this);\r\n        this.emailChanged = this.emailChanged.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    usernameChanged(event) {\r\n        this.setState({username: event.target.value});\r\n    }\r\n\r\n    passwordChanged(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    emailChanged(event) {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        // SUBMIT BUTTON EVENT HANDLER\r\n        //alert('A name was submitted: ' + this.state.username);\r\n        //alert('A password was submitted: ' + this.state.password);\r\n        //alert('A email was submitted: ' + this.state.email);\r\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then((userCredential) => {\r\n                // Signed in \r\n                var user = userCredential.user;\r\n                var uid = user.uid;\r\n                this.setState({userid: uid})\r\n                firebase.database().ref('/users/'+this.state.userid).set({\r\n                    logins: 1,\r\n                    email: this.state.email,\r\n                    user: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n                sessionStorage.setItem('uid',uid)\r\n                this.setState({loggedin: true})\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                alert(errorMessage);\r\n                // ..\r\n            });\r\n    \r\n        event.preventDefault();\r\n    }\r\n\r\n    \r\n      render() {\r\n\r\n        if (this.state.loggedin === true) {\r\n            return <Redirect to='/profile'/>\r\n        }\r\n\r\n        return (\r\n            <div class=\"form\">\r\n\r\n            <div class=\"form-title\">Sign up</div>\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    email:\r\n                    <input type=\"text\" value={this.state.email} onChange={this.emailChanged} />\r\n                </label>\r\n                <label>\r\n                    username:\r\n                    <input type=\"text\" value={this.state.username} onChange={this.usernameChanged} />\r\n                </label>\r\n                <label>\r\n                    password:\r\n                    <input type=\"text\" value={this.state.password} onChange={this.passwordChanged} />\r\n                </label>\r\n                <label>\r\n                    confirm password:\r\n                    <input type=\"text\" value={this.state.password} onChange={this.passwordChanged} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n\r\n            </div>\r\n        );\r\n      }\r\n  }\r\n\r\nexport default SignupForm;","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\firebase.js",[],"C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\Topbar.js",["74","75"],"import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport firebase from '../firebase.js';\r\n\r\nclass Topbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loggedout: false\r\n        };\r\n    }\r\n\r\n    signOut = () => {\r\n        var uid = sessionStorage.getItem('uid')\r\n        alert(uid);\r\n        this.setState({loggedout: true})\r\n    }\r\n    \r\n    render() {\r\n\r\n        if (this.state.loggedout === true) {\r\n            return <Redirect to=''/>\r\n        }\r\n\r\n        return (\r\n            <div class=\"topbar\">\r\n\r\n                <div class=\"topbar-title\">Journ-o</div>\r\n                <div class=\"outline-button\" onClick={this.signOut}>sign out</div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Topbar;","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\JournalList.js",["76"],"C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\QuestionCard.js",["77","78"],"import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nimport FillButton from './FillButton';\r\n\r\nclass QuestionCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isMC: this.props.type == 'mc'\r\n        };\r\n    }\r\n\r\n    onButtonClick = () => {\r\n        alert(\"swag\");\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div class=\"qcard\">\r\n                <div class=\"qcard-top\">\r\n                    <div class=\"box\">{this.props.question.question}</div>\r\n                </div>\r\n                <div class=\"qcard-bottom\">\r\n                    <div class=\"box\">\r\n                        {this.state.isMC ? \r\n                        this.props.question.choices.map((item, index) => (\r\n                            <FillButton \r\n                                text={item.answer} // answer option text\r\n                                active={this.props.choice == index} // choice.picked (1 or 0)\r\n                                index={index} // index of choice\r\n                                handleClick={this.props.handleClick}\r\n                            />\r\n                        ))\r\n                        : \r\n                        <input type='text' class=\"qcard-write\" placeholder=\"type here...\"/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionCard;","C:\\Users\\ellio\\Documents\\GitHub\\qhacks2021\\journal-app\\src\\components\\FillButton.js",["79","80","81"],"import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nclass FillButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicked: this.props.picked == 1,\r\n        };\r\n    }\r\n    \r\n    render() {\r\n\r\n        const style = {\r\n            display: 'inline-block',\r\n            maxWidth: 300,\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            paddingTop: 10,\r\n            paddingBottom: 10,\r\n            backgroundColor: this.props.active == 1 ? 'white' : '#16C79A',\r\n            color: this.props.active == 1 ? '#16C79A' : 'white',\r\n            textAlign: 'center',\r\n            borderRadius: 100,\r\n            marginLeft: 10,\r\n            marginRight: 10,\r\n        };\r\n\r\n        return (\r\n            <div style={style} onClick={() => this.props.handleClick(this.props.index)}>\r\n                {this.props.text}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FillButton;",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":16},{"ruleId":"86","severity":1,"message":"90","line":6,"column":10,"nodeType":"88","messageId":"89","endLine":6,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":59,"column":25,"nodeType":"93","messageId":"94","endLine":59,"endColumn":27},{"ruleId":"91","severity":1,"message":"92","line":61,"column":32,"nodeType":"93","messageId":"94","endLine":61,"endColumn":34},{"ruleId":"91","severity":1,"message":"92","line":83,"column":36,"nodeType":"93","messageId":"94","endLine":83,"endColumn":38},{"ruleId":"91","severity":1,"message":"92","line":84,"column":64,"nodeType":"93","messageId":"94","endLine":84,"endColumn":66},{"ruleId":"91","severity":1,"message":"92","line":88,"column":29,"nodeType":"93","messageId":"94","endLine":88,"endColumn":31},{"ruleId":"91","severity":1,"message":"95","line":111,"column":43,"nodeType":"93","messageId":"94","endLine":111,"endColumn":45},{"ruleId":"91","severity":1,"message":"92","line":114,"column":68,"nodeType":"93","messageId":"94","endLine":114,"endColumn":70},{"ruleId":"86","severity":1,"message":"90","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":14},{"ruleId":"86","severity":1,"message":"96","line":52,"column":21,"nodeType":"88","messageId":"89","endLine":52,"endColumn":30},{"ruleId":"86","severity":1,"message":"90","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":14},{"ruleId":"86","severity":1,"message":"96","line":60,"column":21,"nodeType":"88","messageId":"89","endLine":60,"endColumn":30},{"ruleId":"86","severity":1,"message":"90","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":7,"column":8,"nodeType":"88","messageId":"89","endLine":7,"endColumn":16},{"ruleId":"86","severity":1,"message":"90","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":11,"column":35,"nodeType":"93","messageId":"94","endLine":11,"endColumn":37},{"ruleId":"91","severity":1,"message":"92","line":31,"column":59,"nodeType":"93","messageId":"94","endLine":31,"endColumn":61},{"ruleId":"91","severity":1,"message":"92","line":9,"column":40,"nodeType":"93","messageId":"94","endLine":9,"endColumn":42},{"ruleId":"91","severity":1,"message":"92","line":22,"column":48,"nodeType":"93","messageId":"94","endLine":22,"endColumn":50},{"ruleId":"91","severity":1,"message":"92","line":23,"column":38,"nodeType":"93","messageId":"94","endLine":23,"endColumn":40},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'errorCode' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]